@model MvcClientSite.Models.DriverProfileModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>DriverProfile</title>
    <link type="text/css" rel="stylesheet" href='@Url.Content("~/Content/ProfileStyle.css")'/>
    <script type="text/javascript" src='@Url.Content("~/scripts/jquery-2.1.4.js")'></script>
    <script src='@Url.Content("~/Scripts/jquery.signalR-2.2.0.min.js")'></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src='@Url.Content("~/signalr/hubs")'></script>
    <script>
        $(function () {
            var driverHub = $.connection.driverHub;
            var driverId = $("#driverId").val();
            var regionId = $("#ddlRegion").val();
            $.connection.hub.start();
            //driverHub.client.hello = function (data) {
            //    alert(data);
            //}
            $("#toWork").click(function () {
                driverHub.server.addToQueue(driverId , regionId).done(function (res) {
                    alert(res);
                });
            });
            $("#delFromQueue").click(function () {
                driverHub.server.delFromQueue(driverId).done(function (res) {
                    alert(res);
                });
            });
            function QueryDriver(user , street){

            }
        });
    </script>
</head>
<body>
    <input id="driverId" type="hidden" value="@Model.Id" />
   
    <div id="InfoPanel">
        <ol>
            <li>@Html.DisplayTextFor(model => model.Name)</li>
            <li>@Html.DisplayTextFor(model => model.Surname)</li>
            <li>@Html.DisplayTextFor(model => model.Middlename)</li>
        </ol>
        <div id="CarData">
            Car Data:
            <ol>
                <li>@Html.DisplayTextFor(model => model.CarBrand)</li>
                <li>@Html.DisplayTextFor(model => model.CarModel)</li>
                <li>@Html.DisplayTextFor(model => model.CarNumber)</li>
                <li>Class:@Html.DisplayTextFor(model => model.CarClass)</li>
                <li>@Html.DisplayTextFor(model => model.VehicleType)</li>
            </ol>
        </div>
        <ol>
            <li>License Number:@Html.DisplayTextFor(model => model.LicenseNumber)</li><br />
            <li>License Valid Date:@Html.DisplayTextFor(model => model.LicenseValidDate)</li>
        </ol>
        <div id="work">
            Stay to queue:
           <div>
                @Html.DropDownListFor(model => model.regions, Model.RegionsList, new { Id="ddlRegion"})
                <input id="toWork" type="submit" value="Stay to queue" onclick=""/>
                <input id="delFromQueue" type="submit" value="Delete From Queue" onclick=""/>
               
            </div>
               
                
        </div>
        
    </div>
    <div id="header">
        <div id="callDriver">
            <input type="hidden" />
            You want to accept custom: <span id="client"></span> to addres <span id="street"></span>?
            <input type="button" id="positiveAnswer" value="Yes"/>
            <input type="button" id="negativeAnswer" value="No" />
        </div>
    </div>
    <div id="content">
        <div id="history">
           <table>
            <tr>
                <th>Start time</th>
                <th>Finish time</th>
                <th>Depature addres</th>
                <th>Destination addres</th>
                <th>Driver</th>
                <th>Client</th>
            </tr>
            <tbody>
                @foreach(CodeFirst.History h in Model.History)
                {
                    @Html.DisplayFor(hh => h)
                }
            </tbody>
        </table>
   </div>
    </div>
</body>
</html>
