// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 11.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// StartApplication - Используйте "StartApplicationParams" для передачи параметров в этот метод.
        /// </summary>
        public void StartApplication()
        {
            #region Variable Declarations
            WinEdit uIИмяEdit = this.UIDebugWindow.UIItemWindow.UITstListItem.UIИмяEdit;
            WinEdit uITextBox1Edit = this.UIForm1Window.UITextBox1Window.UITextBox1Edit;
            WinButton uIPressButton = this.UIForm1Window.UIPressWindow.UIPressButton;
            #endregion

            // Двойной щелчок "Имя" надпись
            Mouse.DoubleClick(uIИмяEdit, new Point(22, 17));

            // Тип "ssss" в "textBox1" надпись
            uITextBox1Edit.Text = this.StartApplicationParams.UITextBox1EditText;

            // Щелкните "Press" кнопка
            Mouse.Click(uIPressButton, new Point(89, 26));
        }
        
        /// <summary>
        /// AssertResultMethod - Используйте "AssertResultMethodExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertResultMethod()
        {
            #region Variable Declarations
            WinButton uIButton1Button = this.UIForm1Window.UIPressWindow.UIButton1Button;
            #endregion

            // Убедитесь, что свойство DisplayText "button1" кнопка равняется "Test"
            Assert.AreEqual(this.AssertResultMethodExpectedValues.UIButton1ButtonDisplayText, uIButton1Button.DisplayText);
        }
        
        #region Properties
        public virtual StartApplicationParams StartApplicationParams
        {
            get
            {
                if ((this.mStartApplicationParams == null))
                {
                    this.mStartApplicationParams = new StartApplicationParams();
                }
                return this.mStartApplicationParams;
            }
        }
        
        public virtual AssertResultMethodExpectedValues AssertResultMethodExpectedValues
        {
            get
            {
                if ((this.mAssertResultMethodExpectedValues == null))
                {
                    this.mAssertResultMethodExpectedValues = new AssertResultMethodExpectedValues();
                }
                return this.mAssertResultMethodExpectedValues;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        #endregion
        
        #region Fields
        private StartApplicationParams mStartApplicationParams;
        
        private AssertResultMethodExpectedValues mAssertResultMethodExpectedValues;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UIForm1Window mUIForm1Window;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "StartApplication"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class StartApplicationParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "ssss" в "textBox1" надпись
        /// </summary>
        public string UITextBox1EditText = "ssss";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertResultMethod"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class AssertResultMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство DisplayText "button1" кнопка равняется "Test"
        /// </summary>
        public string UIButton1ButtonDisplayText = "ssss";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UITstListItem UITstListItem
        {
            get
            {
                if ((this.mUITstListItem == null))
                {
                    this.mUITstListItem = new UITstListItem(this);
                }
                return this.mUITstListItem;
            }
        }
        #endregion
        
        #region Fields
        private UITstListItem mUITstListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UITstListItem : WinListItem
    {
        
        public UITstListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinListItem.PropertyNames.Name] = "tst";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UITextBox1Window UITextBox1Window
        {
            get
            {
                if ((this.mUITextBox1Window == null))
                {
                    this.mUITextBox1Window = new UITextBox1Window(this);
                }
                return this.mUITextBox1Window;
            }
        }
        
        public UIPressWindow UIPressWindow
        {
            get
            {
                if ((this.mUIPressWindow == null))
                {
                    this.mUIPressWindow = new UIPressWindow(this);
                }
                return this.mUIPressWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITextBox1Window mUITextBox1Window;
        
        private UIPressWindow mUIPressWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UITextBox1Window : WinWindow
    {
        
        public UITextBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox1Edit
        {
            get
            {
                if ((this.mUITextBox1Edit == null))
                {
                    this.mUITextBox1Edit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBox1Edit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBox1Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox1Edit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "11.0.50727.1")]
    public class UIPressWindow : WinWindow
    {
        
        public UIPressWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIPressButton
        {
            get
            {
                if ((this.mUIPressButton == null))
                {
                    this.mUIPressButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIPressButton.SearchProperties[WinButton.PropertyNames.Name] = "Press";
                    this.mUIPressButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIPressButton;
            }
        }
        
        public WinButton UIButton1Button
        {
            get
            {
                if ((this.mUIButton1Button == null))
                {
                    this.mUIButton1Button = new WinButton(this);
                    #region Условия поиска
                    this.mUIButton1Button.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIButton1Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIPressButton;
        
        private WinButton mUIButton1Button;
        #endregion
    }
}
